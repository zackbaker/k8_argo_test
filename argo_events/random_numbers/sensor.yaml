apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: random-number-sensor
  labels:
    # sensor controller with instanceId "argo-events" will process this sensor
    sensors.argoproj.io/sensor-controller-instanceid: argo-events
spec:
  template:
    spec:
      containers:
        - name: sensor
          image: argoproj/sensor:v0.13.0
          imagePullPolicy: Always
      serviceAccountName: argo-events-sa
  dependencies:
    - name: test-dep
      gatewayName: file-gateway
      eventName: random-numbers
  subscription:
    http:
      port: 9300
  triggers:
    - template:
        name: random-number-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: random-number-echo-
              spec:
                entrypoint: echo-num
                templates:
                  - name: echo-num
                    container:
                      image: "zackbaker/k8_argo_test:latest"
                      command: [python, print_random_number.py]
                      args:
                        - "File Name" # Get's replaced by event source
                      volumeMounts:
                        - mountPath: /mnt/file-store
                          name: workdir
                volumes:
                  - name: workdir
                    persistentVolumeClaim:
                      claimName: file-store
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: name
              dest: spec.templates.0.container.args.0